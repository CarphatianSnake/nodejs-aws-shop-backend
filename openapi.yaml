openapi: 3.0.3
info:
  title: MyStore - OpenAPI 3.0
  description: This is a sample MyStore Server based on the OpenAPI 3.0 specification.
  version: 0.2.0
servers:
  - url: https://vwkevd2g6j.execute-api.eu-west-1.amazonaws.com/
tags:
  - name: products
    description: Access to products data
paths:
  /products:
    get:
      tags:
        - products
      summary: Get products list
      description: List of products.
      operationId: getProductsLst
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    post:
      tags:
        - products
      summary: Create product
      description: Creates a single product.
      operationId: createProduct
      requestBody:
        description: Product data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProduct"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /products/{productId}:
    get:
      tags:
        - products
      summary: Find product by ID
      description: Returns a single product.
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Product id is required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: 7567ec4b-b10c-48c5-9345-fc73c48a80aa
        title:
          type: string
          example: Product title
        description:
          type: string
          example: Product description
        price:
          type: integer
          example: 15
        count:
          type: integer
          example: 3
    NewProduct:
      type: object
      properties:
        title:
          type: string
          example: Product title
        description:
          type: string
          example: Product description
        price:
          type: integer
          example: 15
        count:
          type: integer
          example: 3
      required:
        - title
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          example: Error message
